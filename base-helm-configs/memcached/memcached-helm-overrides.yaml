---
conf:
  memcached:
    max_connections: 8192
    memory: 1024
    stats_cachedump:
      enabled: true

dependencies:
  dynamic:
    common:
      local_image_registry:
        jobs:
          - memcached-image-repo-sync
        services:
          - endpoint: node
            service: local_image_registry
  static:
    memcached:
      jobs: null
    image_repo_sync:
      services:
        - endpoint: internal
          service: local_image_registry

secrets:
  oci_image_registry:
    memcached: memcached-oci-image-registry-key

endpoints:
  cluster_domain_suffix: cluster.local
  local_image_registry:
    name: docker-registry
    namespace: docker-registry
    hosts:
      default: localhost
      internal: docker-registry
      node: localhost
    port:
      registry:
        node: 5000
  oci_image_registry:
    name: oci-image-registry
    namespace: oci-image-registry
    auth:
      enabled: false
      memcached:
        username: memcached
        password: password
    hosts:
      default: localhost
    port:
      registry:
        default: null
  oslo_cache:
    hosts:
      default: memcached
    port:
      memcache:
        default: 11211
      metrics:
        default: 9150
  kube_dns:
    namespace: kube-system
    name: kubernetes-dns
    hosts:
      default: kube-dns
    scheme: http
    port:
      dns_tcp:
        default: 53
      dns:
        default: 53
        protocol: UDP

network_policy:
  memcached:
    ingress:
      - {}
    egress:
      - {}

monitoring:
  prometheus:
    enabled: true
    memcached_exporter:
      scrape: true

images:
  pull_policy: IfNotPresent
  tags:
    dep_check: 'quay.io/airshipit/kubernetes-entrypoint:v1.0.0'
    memcached: 'docker.io/library/memcached:1.5.5'
    prometheus_memcached_exporter: docker.io/prom/memcached-exporter:v0.4.1
    image_repo_sync: docker.io/library/docker:17.07.0

labels:
  server:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled

manifests:
  configmap_bin: true
  deployment: true
  service: true
  secret_registry: true

architecture: high-availability
autoscaling:
  enabled: true

persistence:
  enabled: true
  size: 10Gi

pod:
  security_context:
    server:
      pod:
        runAsUser: 65534
      container:
        memcached:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        memcached_exporter:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: In
                values:
                  - worker
  resources:
    memcached:
      requests:
        memory: "1Gi"

